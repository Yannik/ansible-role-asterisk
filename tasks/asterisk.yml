- name: Get current install_prereq md5sum
  shell: md5sum {{ asterisk_src_dir }}/contrib/scripts/install_prereq
  failed_when: false
  changed_when: false
  register: asterisk_install_prereq_md5sum

- name: Download/update asterisk src
  git:
    repo: https://github.com/asterisk/asterisk.git
    dest: "{{ asterisk_src_dir }}"
    version: "{{ asterisk_git_version }}"
    update: "{{ (asterisk_state == 'latest') }}"
    depth: 1

- name: Get current install_prereq md5sum
  shell: md5sum {{ asterisk_src_dir }}/contrib/scripts/install_prereq
  failed_when: false
  changed_when: false
  register: asterisk_install_prereq_md5sum_new

- name: Check installable dependencies
  shell: >
    {{ asterisk_src_dir }}/contrib/scripts/install_prereq test \
    | grep "aptitude install -y" \
    | sed 's/aptitude install -y //g'
  when: asterisk_install_prereq_md5sum.stdout != asterisk_install_prereq_md5sum_new.stdout
  register: asterisk_build_deps

- name: Print dependencies to be installed
  debug: msg={{asterisk_build_deps.stdout}}
  when: not asterisk_build_deps|skipped

- name: Let asterisk install dependencies
  shell: export DEBIAN_FRONTEND=noninteractive && ./contrib/scripts/install_prereq install chdir={{ asterisk_src_dir }}
  when: asterisk_install_prereq_md5sum.stdout != asterisk_install_prereq_md5sum_new.stdout

- name: Download mp3 source code
  command: ./contrib/scripts/get_mp3_source.sh chdir={{ asterisk_src_dir }} creates=addons/mp3/mpg123.h

- name: Configure asterisk
  command: ./configure {{ asterisk_configure_options }} chdir={{ asterisk_src_dir }}
  changed_when: false

- name: Create menuselect.makeopts
  command: make menuselect.makeopts chdir={{ asterisk_src_dir }}
  changed_when: false

- name: Do a bit of menuselect configuration
  command: "{{ item }} chdir={{ asterisk_src_dir }}"
  with_items:
    - menuselect/menuselect --enable format_mp3
    - menuselect/menuselect --enable CORE-SOUNDS-EN-WAV --enable CORE-SOUNDS-EN-G722
    - menuselect/menuselect  --enable EXTRA-SOUNDS-EN-GSM --enable EXTRA-SOUNDS-EN-WAV --enable EXTRA-SOUNDS-EN-G722
    - menuselect/menuselect  --disable MOH-OPSOUND-WAV --disable MOH-OPSOUND-GSM --disable MOH-OPSOUND-G722
  changed_when: false

- name: Run custom pre-make commands
  command: "{{ item }} chdir={{ iasterisk_srcdir }}"
  with_items: "{{ asterisk_pre_make_commands }}"
  changed_when: false

- name: Make
  command: make {{ asterisk_make_options }} chdir={{ asterisk_src_dir }}
  changed_when: false

- name: Uninstall previous version
  command: make uninstall chdir={{ asterisk_src_dir }}
  changed_when: false

- name: Install
  command: make install chdir={{ asterisk_src_dir }}
  changed_when: false

- name: Install initscripts
  command: make config chdir={{ asterisk_src_dir }}
  changed_when: false

- name: Install logrotate
  command: make install-logrotate chdir={{ asterisk_src_dir }}
  changed_when: false

- name: Remove /usr/src/asterisk when running on docker
  file: path=/usr/src/asterisk state=absent
  when: ansible_connection == 'docker'

- name: Uninstall build dependencies when running on docker
  command: apt-get purge -y --auto-remove {{ asterisk_build_deps.stdout }}
  when: not asterisk_build_deps|skipped and ansible_connection == 'docker'

- name: Install runtime dependencies when running on docker
  command: apt-get install --no-install-recommends -y libxml2 libxslt1.1 libjansson4 libedit2 lua5.1 libmysqlclient18 unixodbc libsqlite0 libcurl3 libiksemel3 libbluetooth3 libasound2 zlib1g libspeex1 libspeexdsp1 libogg0 libspandsp2 libsrtp0 libresample1 libsnmp30 libpq5 libpopt0 libc-client2007e libcorosync4 libgsm1 libical1a libneon27 libssl1.0.0 libvorbis0a libvorbisenc2 libvorbisfile3 libldap-2.4-2 libjack0  uuid
  when: not asterisk_build_deps|skipped and ansible_connection == 'docker'
